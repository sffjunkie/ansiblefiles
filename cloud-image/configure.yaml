---
- name: Build nocloud image and configs
  hosts: localhost
  vars_files:
    - ./vars/main.yaml

  tasks:
    - name: Include secrets.yaml
      ansible.builtin.include_vars:
        file: secrets.yaml
      register: _include_secrets
      failed_when: false

    - name: Assert default_user exists if user.use_default_user is true
      assert:
        that: not user.use_default_user or (user.use_default_user and default_user is defined)

    - name: Install whois
      when: ansible_os_family == 'Debian'
      ansible.builtin.package:
        name: whois
        state: present

    # Check for the existence of the variable config_name
    # Checking if config_name is defined fails if config_name does not ezist at all
    - name: Set config_name
      when: "'config_name' in hostvars[inventory_hostname]"
      ansible.builtin.set_fact:
        _image_config_name_str: "-{{ config_name }}"
        _config_config_name_str: "{{ config_name }}-"

    - name: Set empty config_name
      when: "not 'config_name' in hostvars[inventory_hostname]"
      ansible.builtin.set_fact:
        _image_config_name_str: ""
        _config_config_name_str: ""

    - name: Get date
      ansible.builtin.command:
        cmd: date +"%Y-%m-%d"
      register: _date
      changed_when: false

    - name: Calc image name
      ansible.builtin.set_fact:
        image_path: "./images/cloud-config{{ _image_config_name_str }}-{{ _date.stdout }}.img"

    - ansible.builtin.set_fact:
        user_config_path: ./configs/{{ _config_config_name_str }}user.yaml
        meta_config_path: ./configs/{{ _config_config_name_str }}meta.yaml

    - ansible.builtin.include_role:
        name: build_cloud_config

    - ansible.builtin.include_role:
        name: build_cloud_config_image

- name: Copy nocloud image and configs
  hosts: furrball
  become: true
  vars_files:
    - ./vars/main.yaml
    - ./vars/secrets.yaml

  tasks:
    - name: Copy images
      ansible.builtin.copy:
        src: "{{ hostvars['localhost']['image_path'] }}"
        dest: ~/images/

    - name: Copy user config
      ansible.builtin.copy:
        src: "{{ hostvars['localhost']['user_config_path'] }}"
        dest: ~/snippets/

    - name: Copy meta config
      ansible.builtin.copy:
        src: "{{ hostvars['localhost']['meta_config_path'] }}"
        dest: ~/snippets/
