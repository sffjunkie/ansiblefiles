---
- name: docker-compose | Set installed version to 'uninstalled'
  ansible.builtin.set_fact:
    _compose_current_version: uninstalled

- name: docker-compose | Check if docker-compose exists  # noqa: command-instead-of-shell
  ansible.builtin.shell:
    cmd: "command -v docker-compose"
  register: _compose_path
  changed_when: false

- name: docker-compose | Get current version of docker-compose
  when: _compose_path.rc == 0
  ansible.builtin.command:
    cmd: "{{ _compose_path.stdout }} version --short"
  register: _compose_current_version
  changed_when: false

- name: docker-compose | Version starts with a 'v' just get stdout
  when: _compose_current_version.stdout[0] == 'v'
  ansible.builtin.set_fact:
    _compose_current_version: "{{ _compose_current_version.stdout }}"

- name: docker-compose | Version does not start with a 'v' prepend 'v' to stdout
  when: _compose_current_version[0] != 'v'
  ansible.builtin.set_fact:
    _compose_current_version: "v{{ _compose_current_version }}"

- name: docker-compose | Get latest release of docker-compose
  when: docker_compose_version == 'latest'
  community.general.github_release:
    user: docker
    repo: compose
    action: latest_release
  register: _compose_latest_version
  changed_when: false

- name: docker-compose | No installation
  block:
    - name: docker-compose | Not installed and Latest requested
      when: docker_compose_version == 'latest'
      ansible.builtin.set_fact:
        _install_version: "{{ _compose_latest_version.tag }}"

    - name: docker-compose | Not installed and Not latest version
      when: docker_compose_version != 'latest'
      ansible.builtin.set_fact:
        _install_version: "{{ docker_compose_version }}"
  when: _compose_path.rc > 0


- name: docker-compose | Existing installation
  block:
    - name: docker-compose | Installed and Latest requested
      when: >-
        _compose_latest_version.tag > _compose_current_version
        and docker_compose_version == 'latest'
      ansible.builtin.set_fact:
        _install_version: "{{ _compose_latest_version.tag }}"

    - name: docker-compose | Installed and Not latest version
      when: >-
        docker_compose_version != 'latest' and
        docker_compose_version > _compose_current_version
      ansible.builtin.set_fact:
        _install_version: "{{ docker_compose_version }}"
  when: _compose_path.rc == 0

- name: docker-compose | If new version required
  block:
    - name: docker-compose | Create temporary directory
      ansible.builtin.tempfile:
        prefix: compose
        state: directory
      register: _compose_tmp_dir
      notify:
        - docker-compose | Delete docker-compose temporary files
      changed_when: false

    - name: docker-compose | Download compose binary
      ansible.builtin.uri:
        url: "https://github.com/docker/compose/releases/download/{{ _install_version }}/docker-compose-linux-x86_64"
        dest: "{{ _compose_tmp_dir.path }}/docker-compose"
        mode: "+x"
      changed_when: false

    - name: docker-compose | Set dest path if existing installation
      when: _compose_path.rc == 0
      ansible.builtin.set_fact:
        _dest_path: "{{ _compose_path.stdout | dirname }}"

    - name: docker-compose | Otherwise use /usr/local/bin
      when: _compose_path.rc != 0
      ansible.builtin.set_fact:
        _dest_path: /usr/local/bin

    - name: docker-compose | Copy compose file
      ansible.builtin.copy:
        src: "{{ _compose_tmp_dir.path }}/docker-compose"
        dest: "{{ _dest_path }}"
        remote_src: true
        mode: preserve

  when: _install_version is defined
