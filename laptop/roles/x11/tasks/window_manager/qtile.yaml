---
- name: QTile - install qtile os dependencies
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - libcairo2
    - libffi-dev
    - libpangocairo-1.0-0
    - libxcb-render0-dev

- name: Install python3 gobject
  ansible.builtin.import_role:
    name: python3_gobject

- name: QTile - install pypi dependencies
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
  loop:
    - xcffib
    - dbus-next

- name: Check for cairocffi
  ansible.builtin.stat:
    path: "{{ '/usr/local/lib/python' ~ ansible_python.version.major ~ '.' ~ ansible_python.version.minor ~ '/dist-packages/cairocffi/__init__.py' }}"
  register: _cairocffi_init
  changed_when: false

- name: Check for .ansible marker file in cairocffi to determine if built by ansible
  ansible.builtin.stat:
    path: "{{ '/usr/local/lib/python' ~ ansible_python.version.major ~ '.' ~ ansible_python.version.minor ~ '/dist-packages/cairocffi/.ansible' }}"
  register: _cairocffi_built
  changed_when: false

- name: Uninstall cairocffi - exists but not built by ansible
  ansible.builtin.pip:
    name: cairocffi
    state: absent
  when: _cairocffi_init.stat.exists and not _cairocffi_built.stat.exists

- name: QTile - install cairoffi with --no-cache-dir
  ansible.builtin.pip:
    name: cairocffi
    state: present
    extra_args: "--no-cache-dir"
  when: not _cairocffi_built.stat.exists

- name: Touch 'built by ansible' flag file
  ansible.builtin.file:
    path: "{{ '/usr/local/lib/python' ~ ansible_python.version.major ~ '.' ~ ansible_python.version.minor ~ '/dist-packages/cairocffi/.ansible' }}"
    state: touch
  changed_when: false

- name: QTile - install package
  ansible.builtin.pip:
    name: qtile
    state: present

- name: Create qtile .desktop file
  ansible.builtin.copy:
    src: files/qtile.desktop
    dest: /usr/share/xsessions/
    mode: '0644'

- name: Update configfiles for qtile
  block:
    - ansible.builtin.set_fact:
        _qtile_config:
          qtile: {}

    - ansible.utils.update_fact:
        updates:
          - path: configfiles.configs
            value: "{{ configfiles.configs | combine(_qtile_config) }}"
      register: _updated_fact
      changed_when: false

    - ansible.builtin.set_fact:
        configfiles: "{{ _updated_fact.configfiles }}"
      changed_when: false
