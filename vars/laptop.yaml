---
directories:
  - ~/.local
  - ~/.local/bin
  - ~/.config

apps:
  audio_mixer: pulsemixer
  browser: firefox
  code_editor: code
  compositor: picom
  editor: neovim
  file_manager: ranger
  hot_keys: sxhkd
  image_viewer: sxiv
  music_player: ncmpcpp
  music_visualizer: vis
  notifier: dunst
  pdf_viewer: zathura
  terminal: alacritty
  video_player: mpv

linkhandler:
  'text/x-python': "{{ apps.code_editor }}"
  'image/png': "{{ apps.image_viewer }}"

x11:
  # dpi: 144
  video_card_driver: # Empty value falls back to modesetting driver
  display_manager:  lightdm
  greeter: lightdm-gtk-greeter
  window_manager: qtile
  avatar: "{{ playbook_dir }}/../files/avatar96x96.png"

color_scheme: nord

fonts:
  - name: Hack
    url: https://github.com/source-foundry/Hack/releases/download/v3.003/Hack-v3.003-ttf.zip
    style: monospace
font_size: 10 #pt

shell: zsh
ohmyzsh:
  install: user
  plugins: # plugins to enable that are shipped with oh-my-zsh
    - docker
    - docker-compose
    - git
    - sudo
    - web-search
  user_plugins: # plugins to install and enable from https://github.com/zsh-users/
    - zsh-completions
    - zsh-syntax-highlighting

packages:
  os:
    - "{{ apps.audio_mixer }}"
    - "{{ apps.browser }}"
    # - "{{ apps.compositor }}"
    - "{{ apps.editor }}"
    - "{{ apps.file_manager }}"
    - "{{ apps.image_viewer }}"
    - "{{ apps.music_player }}"
    # - "{{ apps.music_visualizer }}"
    - "{{ apps.notifier }}"
    - "{{ apps.pdf_viewer }}"
    # - "{{ apps.terminal }}"
    - "{{ apps.video_player }}"
    - "{{ apps.hot_keys }}"
    - bat
    - mpd
    - nitrogen
    - pavucontrol

  pypi:
    - pipx
    - pywal

# List of directories to be created in $HOME
development:
  dirs:
    - development
    - development/gist
    - development/incubator
    - development/project
    - development/source
    - development/venv

  # Roles to set up development environments
  # The actual roles are named `development_<role_name>` e.g. `development_go`
  roles:
    - ansible
    - go
    - python
    - pyenv
    - rust
    - typescript
    - vscode

  common:
    install: user
    packages:
      pypi:
        - meson

  ansible:
    install: user
    packages:
      pipx:
        - ansible-base
        - ansible-lint
        # - \"molecule[docker]\"
        - yamllint

  go:
    install: user  # or 'system'
    version: latest

  python:
    install: user
    packages:
      os:
        - "python{{ ansible_python.version.major }}.{{ ansible_python.version.minor }}-venv"
      pipx:
        - black
        - cookiecutter
        - poetry
        - pytest
        - sphinx
        - tox

  pyenv:
    plugins:
      git:
        - { repo: https://github.com/pyenv/pyenv-virtualenv, dest: "{{ local_home }}/pyenv/plugins/pyenv-virtualenv" }

  rust:
    install: user

  typescript:
    install: global
    npm_global_is_local: true  # if true then global npm packages will be installed under $HOME/.local/
    packages:
      os:
        - "nodejs"
        - "npm"
      npm:
        - "@types/node"
        - "typescript"
        - "typedoc"

  vscode:
    extensions:
      - 2gua.rainbow-brackets
      - avli.clojure
      - DavidAnson.vscode-markdownlint
      - golang.go
      - hashicorp.terraform
      - jakeboone02.mediawiki
      - mathiasfrohlich.Kotlin
      - miguelsolorio.fluent-icons
      - mindaro-dev.file-downloader
      - ms-azuretools.vscode-docker
      - ms-dotnettools.csharp
      - ms-python.python
      - ms-python.vscode-pylance
      - ms-toolsai.jupyter
      - ms-vscode-remote.remote-containers
      - ms-vscode-remote.remote-ssh
      - ms-vscode-remote.remote-ssh-edit
      - ms-vscode-remote.vscode-remote-extensionpack
      - oderwat.indent-rainbow
      - PKief.material-icon-theme
      - redhat.vscode-yaml
      - rust-lang.rust
      - samuelcolvin.jinjahtml
      - seanwu.vscode-qt-for-python
      - siegebell.prettify-symbols-mode
      - vscode-icons-team.vscode-icons
